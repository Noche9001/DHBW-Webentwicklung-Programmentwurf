Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,17 +4,27 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="7fa171ff-7b4d-4da5-ac84-0c2dc548c6b0" name="Changes" comment="Stand 09/11&#10;-Raum erstellen möglich&#10;-Nachrichten in Raum senden möglich&#10;&#10;TODO&#10;-Username Eingabe&#10;-Nachrichten an einzelne User&#10;-Frontend überarbeiten">
-      <change afterPath="$PROJECT_DIR$/.idea/jsLibraryMappings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/index.html" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/js/home.js" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/js/msgapi.js" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/js/room.js" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/js/socket.js" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/room.html" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/style/chat.css" afterDir="false" />
+    <list default="true" id="7fa171ff-7b4d-4da5-ac84-0c2dc548c6b0" name="Changes" comment="Stand 12/11&#10;-UI Überarbeitung&#10;-Raumname prüfung&#10;&#10;&#10;TODO&#10;-Username Eingabe&#10;-Nachrichten an einzelne User">
+      <change afterPath="$PROJECT_DIR$/js/socket2.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/js/socketServer.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/room1.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/style/home/home.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/style/room/canvas.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/style/room/footer.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/style/room/header.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/style/room/message.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/style/room/room.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/style/room/spinner.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/test.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/ws/index.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/hello.js" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/index.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/js/home.js" beforeDir="false" afterPath="$PROJECT_DIR$/js/home.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/js/room.js" beforeDir="false" afterPath="$PROJECT_DIR$/js/room.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/js/socket.js" beforeDir="false" afterPath="$PROJECT_DIR$/js/socket.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/room.html" beforeDir="false" afterPath="$PROJECT_DIR$/room.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/style/chat.css" beforeDir="false" afterPath="$PROJECT_DIR$/style/chat.css" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -25,8 +35,9 @@
     <option name="RECENT_TEMPLATES">
       <list>
         <option value="package.json" />
-        <option value="HTML File" />
+        <option value="CSS File" />
         <option value="JavaScript File" />
+        <option value="HTML File" />
       </list>
     </option>
   </component>
@@ -49,31 +60,33 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
-    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;javascript.nodejs.core.library.configured.version&quot;: &quot;19.0.0&quot;,
-    &quot;javascript.nodejs.core.library.typings.version&quot;: &quot;18.11.9&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/noah5/IdeaProjects/Programmentwurf/test&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.web.browsers&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "ASKED_ADD_EXTERNAL_FILES": "true",
+    "DefaultHtmlFileTemplate": "HTML File",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "javascript.nodejs.core.library.configured.version": "19.0.0",
+    "javascript.nodejs.core.library.typings.version": "18.11.9",
+    "last_opened_file_path": "C:/Users/noah5/IdeaProjects/Programmentwurf/test",
+    "list.type.of.created.stylesheet": "CSS",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "reference.settings.ide.settings.web.browsers"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\noah5\IdeaProjects\Programmentwurf\test" />
       <recent name="C:\Users\noah5\IdeaProjects\Programmentwurf" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="C:\Users\noah5\IdeaProjects\Programmentwurf\style\room" />
       <recent name="C:\Users\noah5\IdeaProjects\Programmentwurf\js" />
     </key>
   </component>
@@ -87,7 +100,8 @@
       <updated>1667582647817</updated>
       <workItem from="1667582648974" duration="1613000" />
       <workItem from="1667944230142" duration="12730000" />
-      <workItem from="1667957653748" duration="1255000" />
+      <workItem from="1667957653748" duration="1719000" />
+      <workItem from="1668212221576" duration="22847000" />
     </task>
     <task id="LOCAL-00001" summary="init">
       <created>1667582861873</created>
@@ -96,7 +110,14 @@
       <option name="project" value="LOCAL" />
       <updated>1667582861873</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="Stand 09/11&#10;-Raum erstellen möglich&#10;-Nachrichten in Raum senden möglich&#10;&#10;TODO&#10;-Username Eingabe&#10;-Nachrichten an einzelne User&#10;-Frontend überarbeiten">
+      <created>1667958972729</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1667958972729</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: js/socket.js
===================================================================
diff --git a/js/socket.js b/js/socket.js
--- a/js/socket.js	
+++ b/js/socket.js	
@@ -1,10 +1,7 @@
 const socket = new WebSocket("wss://chat.web2021.dhbw.scytec.de/ws");
-let activeUsers;
 
 socket.onopen = () => {
     console.log("Connection established");
-    activeUsers++;
-    console.log("Active Users: " + activeUsers);
 }
 
 socket.onclose = () => {
Index: room.html
===================================================================
diff --git a/room.html b/room.html
--- a/room.html	
+++ b/room.html	
@@ -3,66 +3,29 @@
 <!DOCTYPE html>
 <html lang="en">
 <head>
-  <meta charset="UTF-8">
-  <meta http-equiv="X-UA-Compatible" content="Chrome">
-  <meta name="viewport" content="width=device-width, initial-scale=1.0">
-  <link rel="stylesheet" type="text/css" href="style/chat.css">
-  <title>Chat-App Friends</title>
+    <meta charset="UTF-8">
+    <title id="title"></title>
+    <link rel="stylesheet" href="style/room/room.css">
 </head>
 <body>
-<div class="backCardLarge">
-  <div class="contentDivLarge">
-    <div class="header">
-      <div>
-        <img class="smallImage" src="images/chat.png">
-      </div>
-      <div>
-        <h4>Chat</h4>
-      </div>
-      <div>
-        <a href="friends.html">
-          <button class="btn1">Remove</button>
-        </a>
-      </div>
-      <div>
-        <a href="profile.html">
-          <button class="btn2">Profile</button>
-        </a>
-      </div>
-      <div>
-        <a href="friends.html">
-          <button class="btn2">Friends</button>
-        </a>
-      </div>
-    </div>
-    <hr>
-    <div class="row2">
-      <div class="friendsNav">
-        <div>
-          <h5>Chat with Friends</h5>
-          <ul>
-            <li><a href="profile.html">Anita</a></li>
-            <li><a href="profile.html">Bene</a></li>
-            <li><a href="profile.html">Lukas</a></li>
-            <li><a href="profile.html">Darius</a></li>
-          </ul>
+    <div class="container">
+        <div class="header">
+            <div class="online"></div>
+            <span class="usernameHeader">Noche9001</span>
+            <button onclick="leave()">Raum verlassen</button>
+            <span class="roomId">Raum-ID: <b id="roomId"></b></span>
         </div>
-      </div>
-      <div class="chatDiv">
-        <div>
-          <h5>Bene</h5>
+
+        <div class="canvas"  id="canvas">
+                <span class="spinner"></span>
         </div>
-        <div class="chatContent" id="chatContent">
 
+        <div class="footer">
+            <input type="text" id="message">
+            <button type="submit" onclick="send()">Senden</button>
         </div>
-        <div class="row">
-          <input class="largeInput" id="message" type="text" placeholder="Type a messgae">
-          <button class="btn2" id="sendMsg" onclick="send()">Send</button>
-        </div>
-      </div>
     </div>
-  </div>
-</div>
+
 </body>
 </html>
 <script src="js/room.js"></script>
\ No newline at end of file
Index: js/home.js
===================================================================
diff --git a/js/home.js b/js/home.js
--- a/js/home.js	
+++ b/js/home.js	
@@ -2,10 +2,16 @@
 const input = document.getElementById("roomId");
 
 button.addEventListener("click", () => {
-    if(input.value.length > 0){
-        let roomId = input.value;
+    const roomId = input.value;
+    if(roomId.length > 0){
+        for (let i = 0; i < roomId.length; i++) {
+            if(!/([A-Za-z0-9-_])/.test(roomId.charAt(i))) {
+                alert("Sie haben ungültige Zeichen eingegeben. \n Erlaubte Zeichen: a-z, A-Z, 0-9, -, _")
+                input.value = "";
+                return;
+            }
+        }
         window.location.href = "/Programmentwurf/room.html?roomId="+ roomId;
-        socket.subscribe(roomId)
     }
 })
 
Index: index.html
===================================================================
diff --git a/index.html b/index.html
--- a/index.html	
+++ b/index.html	
@@ -2,12 +2,17 @@
 <html lang="en">
 <head>
     <meta charset="UTF-8">
-    <title>Title</title>
+    <title>WebProg Chat</title>
+    <link rel="stylesheet" href="style/home/home.css">
 </head>
 <body>
-<label for="roomId">Raum ID</label>
-<input type="text" id="roomId">
-<button id="createRoom">Raum erstellen</button>
+    <div class="container">
+        <label for="roomId">Raum-ID</label>
+        <input type="text" id="roomId">
+        <button id="createRoom">Raum erstellen / betreten</button>
+        <div style="text-align: center"><b>Erlaubte Zeichen:</b><br> a-z; A-Z; 0-9; -; _</div>
+    </div>
+
 </body>
 </html>
 <script src="js/home.js"></script>
\ No newline at end of file
Index: js/room.js
===================================================================
diff --git a/js/room.js b/js/room.js
--- a/js/room.js	
+++ b/js/room.js	
@@ -1,19 +1,33 @@
 let roomId;
-const messageInput = document.getElementById("message")
+const canvas = document.getElementById("canvas");
+const messageInput = document.getElementById("message");
+const roomIdSpan = document.getElementById("roomId");
+const title = document.getElementById("title");
 let messages;
 
 window.onload = () => {
     const params = window.location.search;
     const urlParams = new URLSearchParams(params);
 
-    roomId = urlParams.get('roomId')
-    init();
+    roomId = urlParams.get('roomId');
+
+    if(roomId == null || roomId === "") {
+        window.location.href = "/Programmentwurf/";
+    }
+    else {
+        title.innerText = "Raum " + roomId;
+        init();
+    }
 }
 
 init = () => {
     waitForReady().then(() => {
         socket.subscribe(roomId);
-        sendMsg("testusr", "testusr joined the room.").then(() => loadAllMessages())
+        sendMsg("SERVER", "testusr hat den Raum betreten").then(() => {
+            loadAllMessages()
+            roomIdSpan.innerText = roomId;
+            canvas.scrollTop = canvas.scrollHeight - canvas.clientHeight;
+        });
     })
 }
 
@@ -26,46 +40,49 @@
 }
 
 send = () => {
-    sendMsg("testusr", messageInput.value, null).then(() => loadAllMessages())
+    sendMsg("testusr", messageInput.value, null).then(() => loadAllMessages());
+    messageInput.value = "";
 }
 
 createMessages = () => {
-    const body = document.getElementById("chatContent")
-
-    while (body.firstChild) {
-        body.removeChild(body.firstChild);
+    while (canvas.firstChild) {
+        canvas.removeChild(canvas.firstChild);
     }
-
     for (let i = 0; i < messages.length; i++) {
+
         let msg = document.createDocumentFragment();
 
         const divMsg = document.createElement("div");
         divMsg.className = "message";
 
-        const divRow = document.createElement("div");
-        divRow.className = "onlyRow";
+        const username = document.createElement("span");
+        username.className = "username";
+        username.innerText = messages[i].sender + ": ";
 
-        const hUser = document.createElement("h6");
-        hUser.innerText = messages[i].sender + ": ";
+        const messageText = document.createElement("div");
+        messageText.className = "messageText";
+        messageText.innerText = messages[i].text;
 
-        const  pMsg = document.createElement("p");
-        pMsg.innerText = messages[i].text;
+        const dateDiv = document.createElement("div");
+        dateDiv.className = "date"
 
-        divRow.appendChild(hUser);
-        divRow.appendChild(pMsg);
+        const date = document.createElement("span");
+        date.innerText = messages[i].timestamp.substring(0,10).replaceAll("-", "/");
 
-        const divTime = document.createElement("div");
+        const time = document.createElement("span");
+        time.innerText = messages[i].timestamp.substring(11,16);
 
-        const pTime = document.createElement("p");
-        pTime.innerText = messages[i].timestamp.substring(11,16);
+        dateDiv.appendChild(time);
+        dateDiv.appendChild(date);
 
-        divTime.appendChild(pTime);
 
-        msg.appendChild(divMsg).appendChild(divRow);
-        divMsg.appendChild(divTime)
+        divMsg.appendChild(username)
+        divMsg.appendChild(messageText)
+        divMsg.appendChild(dateDiv)
 
+        msg.appendChild(divMsg)
 
-        body.appendChild(msg);
+        canvas.appendChild(msg);
     }
 }
 
@@ -73,10 +90,18 @@
     loadMsgs().then(msgs => {
         messages = [];
         msgs.map((mappedMsg => messages.push(mappedMsg)));
+        messages.reverse();
         createMessages();
     })
 }
 
+leave = () => {
+    sendMsg("SERVER", "testusr hat den Raum verlassen", null).then(() => {
+        socket.close();
+        window.location.href = "/Programmentwurf/";
+    });
+
+}
 //SO
 sleep = (ms) => {
     return new Promise((resolve => setTimeout(resolve, ms)));
